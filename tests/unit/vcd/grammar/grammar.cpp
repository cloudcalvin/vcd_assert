#include "vcd/grammar/grammar.hpp"

#include "parse/test/match.h"

#include <catch.hpp>

using namespace Parse::Test;
using namespace VCD::Grammar;

constexpr auto four_state_vcd_example_str =
  "$date June 26, 1989 10:05:41\n"
    "$end\n"
    "$version VERILOG-SIMULATOR 1.0a\n"
    "$end\n"
    "$timescale 1 ns\n"
    "$end\n"
    "$scope module top $end\n"
    "$scope module m1 $end\n" // Error here?
    "$var trireg 1 *@ net1 $end\n"
    "$var trireg 1 *# net2 $end\n"
    "$var trireg 1 *$ net3 $end\n"
    "$upscope $end\n"
    "$scope task t1 $end\n"
    "$var reg 32 (k accumulator[31:0] $end\n"
    "$var integer 32 {2 index $end\n"
    "$upscope $end\n"
    "$upscope $end\n"
    "$enddefinitions $end\n"
    "$comment\n"
    "    $dumpvars was executed at time '#500'.\n"
    "    All initial values are dumped at this time.\n"
    "$end\n"
    "#500\n"
    "$dumpvars\n"
    "x*@\n"
    "x*#\n"
    "x*$\n"
    "bx (k\n"
    "bx {2\n"
    "$end\n"
    "#505\n"
    "0*@\n"
    "1*#\n"
    "1*$\n"
    "b10zx1110x11100 (k\n"
    "b1111000101z01x {2\n"
    "#510\n"
    "0*$\n"
    "#520\n"
    "1*$\n"
    "#530\n"
    "0*$\n"
    "bz (k\n"
    "#535\n"
    "$dumpall\n"
    "0*@\n"
    "1*#\n"
    "0*$\n"
    "bz (k\n"
    "b1111000101z01x {2\n"
    "$end\n"
    "#540\n"
    "1*$\n"
    "#1000\n"
    "$dumpoff\n"
    "x*@\n"
    "x*#\n"
    "x*$\n"
    "bx (k\n"
    "bx {2\n"
    "$end\n"
    "#2000\n"
    "$dumpon\n"
    "z*@\n"
    "1*#\n"
    "0*$\n"
    "b0 (k\n"
    "bx {2\n"
    "$end\n"
    "#2010\n"
    "1*$\n";

TEST_CASE("VCD.Grammar.Grammar","[VCD][Grammar]") {
  CHECK(match_exactly<value_change_dump>(four_state_vcd_example_str));
}